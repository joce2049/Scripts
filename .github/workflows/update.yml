name: update

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0,12 * * *"

jobs:
  update:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'

    steps: 
    - name: Checkout Repository
      uses: actions/checkout@v4.1.7
      with:
        repository: Centralmatrix3/Scripts
        path: Scripts-repo

    - name: Global
      run: |
        mkdir -p Scripts-repo/Ruleset/Special
        { 
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/Loyalsoldier/surge-rules/release/ruleset/gfw.txt"
            echo ""
            curl -L "https://raw.githubusercontent.com/Centralmatrix3/Scripts/master/Ruleset/Special/PROXY.list"
        } > Scripts-repo/Ruleset/Special/Global.list

    - name: Global
      run: |
       cd Scripts-repo/Ruleset/Special
       for file in Global.list; do
         if [ -f "$file" ]; then
           sed -i -e '/^\s*[#;]/d' -e '/^$/d' $file
           sed -i -e '/PROCESS-NAME\|URL-REGEX\|USER-AGENT/d' $file
           sort -o "$file" "$file"
           awk '
             /^DOMAIN,/ { domain[++n] = $0; next }
             /^DOMAIN-SUFFIX,/ { suffix[++m] = $0; next }
             /^DOMAIN-KEYWORD,/ { keyword[++p] = $0; next }
             /^IP-CIDR,/ { cidr[++q] = $0; next }
             /^IP-CIDR6,/ { cidr6[++r] = $0; next }
             END {
                 for (i = 1; i <= n; i++) print domain[i]
                 for (i = 1; i <= m; i++) print suffix[i]
                 for (i = 1; i <= p; i++) print keyword[i]
                 for (i = 1; i <= q; i++) print cidr[i]
                 for (i = 1; i <= r; i++) print cidr6[i]
             }
           ' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
           awk '!seen[tolower($0)]++' "$file" > temp && mv temp "$file"
           filename=$(basename "$file" .list)
           awk -v fname="$filename" 'NR==1 {print "# 规则名称:" fname} {print}' "$file" > tmpfile
           mv tmpfile "$file"
           awk 'NR==2 {print "# 规则统计:00000"} {print}' "$file" > tmpfile
           mv tmpfile "$file"
           sed -i '2a\\' "$file"
           line_count=$(tail -n +4 "$file" | wc -l)
           sed -i "2s/[0-9]\+/$line_count/" "$file"
         else
           echo "$file not found."
         fi
       done

    - name: AdBlock
      run: |
        mkdir -p Scripts-repo/Ruleset
        { 
            curl -L "https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Reject.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Malicious.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanAD.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanProgramAD.list"
            echo ""
            curl -L "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/BanEasyListChina.list"
        } > Scripts-repo/Ruleset/AdBlock.list

    - name: AdBlock
      run: |
       cd Scripts-repo/Ruleset
       for file in AdBlock.list; do
         if [ -f "$file" ]; then
           sed -i -e '/^\s*[#;]/d' -e '/^$/d' $file
           sed -i -e '/PROCESS-NAME\|URL-REGEX\|USER-AGENT/d' $file
           sort -o "$file" "$file"
           awk '
             /^DOMAIN,/ { domain[++n] = $0; next }
             /^DOMAIN-SUFFIX,/ { suffix[++m] = $0; next }
             /^DOMAIN-KEYWORD,/ { keyword[++p] = $0; next }
             /^IP-CIDR,/ { cidr[++q] = $0; next }
             /^IP-CIDR6,/ { cidr6[++r] = $0; next }
             END {
                 for (i = 1; i <= n; i++) print domain[i]
                 for (i = 1; i <= m; i++) print suffix[i]
                 for (i = 1; i <= p; i++) print keyword[i]
                 for (i = 1; i <= q; i++) print cidr[i]
                 for (i = 1; i <= r; i++) print cidr6[i]
             }
           ' "$file" > "$file.tmp" && mv "$file.tmp" "$file"
           awk '!seen[tolower($0)]++' "$file" > temp && mv temp "$file"
           filename=$(basename "$file" .list)
           awk -v fname="$filename" 'NR==1 {print "# 规则名称:" fname} {print}' "$file" > tmpfile
           mv tmpfile "$file"
           awk 'NR==2 {print "# 规则统计:00000"} {print}' "$file" > tmpfile
           mv tmpfile "$file"
           sed -i '2a\\' "$file"
           line_count=$(tail -n +4 "$file" | wc -l)
           sed -i "2s/[0-9]\+/$line_count/" "$file"
         else
           echo "$file not found."
         fi
       done

    - name: QuantumultX
      run: |
        mkdir -p Scripts-repo/QuantumultX/ruleset
        curl -L -o Scripts-repo/QuantumultX/ruleset/AdBlock.list "https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        curl -L -o Scripts-repo/QuantumultX/ruleset/Advertising.list "https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list"

    - name: QuantumultX
      run: |
        cd Scripts-repo/QuantumultX/ruleset
        for file in AdBlock.list Advertising.list; do
          if [ -f "$file" ]; then
            sed -i -e '/^\s*[#;]/d' -e '/^$/d' $file
            sed -i -e 's/DOMAIN-SUFFIX,/HOST-SUFFIX,/g' "$file"
            filename=$(basename "$file" .list)
            awk -v policy="$filename" '!/\/\/|#|^ *$/ {print $0","policy; next} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            filename=$(basename "$file" .list)
            awk -v fname="$filename" 'NR==1 {print "# 规则名称:" fname} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            awk 'NR==2 {print "# 规则统计:00000"} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            sed -i '2a\\' "$file"
            line_count=$(tail -n +4 "$file" | wc -l)
            sed -i "2s/[0-9]\+/$line_count/" "$file"
          else
            echo "$file not found."
          fi
        done

    - name: Stash
      run: |
        mkdir -p Scripts-repo/Stash/ruleset
        curl -L -o Scripts-repo/Stash/ruleset/AdBlock.yaml "https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml"
        curl -L -o Scripts-repo/Stash/ruleset/Advertising.yaml "https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules_domainset.txt"

    - name: Stash
      run: |
        cd Scripts-repo/Stash/ruleset
        for file in AdBlock.yaml; do
          if [ -f "$file" ]; then
            sed -i -e '/^\s*[#;]/d' -e '/^$/d' $file
            filename=$(basename "$file" .yaml)
            awk -v fname="$filename" 'NR==1 {print "# 规则名称:" fname} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            awk 'NR==2 {print "# 规则统计:00000"} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            sed -i '2a\\' "$file"
            line_count=$(tail -n +5 "$file" | wc -l)
            sed -i "2s/[0-9]\+/$line_count/" "$file"
          else
            echo "$file not found."
          fi
        done

        for file in Advertising.yaml; do
          if [ -f "$file" ]; then
            sed -i -e '/^\s*[#;]/d' -e '/^$/d' $file
            filename=$(basename "$file" .yaml)
            awk -v fname="$filename" 'NR==1 {print "# 规则名称:" fname} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            awk 'NR==2 {print "# 规则统计:00000"} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            sed -i '2a\\' "$file"
            awk 'NR==4 {print "payload:"} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            awk '!/\/\/|#|payload:|^ *$/ {print "  - \x27" $0 "\x27"; next} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            line_count=$(tail -n +5 "$file" | wc -l)
            sed -i "2s/[0-9]\+/$line_count/" "$file"
          else
            echo "$file not found."
          fi
        done

    - name: Surge
      run: |
        mkdir -p Scripts-repo/Surge/ruleset
        curl -L -o Scripts-repo/Surge/ruleset/AdBlock.list "https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt"
        curl -L -o Scripts-repo/Surge/ruleset/Advertising.list "https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list"

    - name: Surge
      run: |
        cd Scripts-repo/Surge/ruleset
        for file in AdBlock.list Advertising.list; do
          if [ -f "$file" ]; then
            sed -i -e '/^\s*[#;]/d' -e '/^$/d' $file
            filename=$(basename "$file" .list)
            awk -v fname="$filename" 'NR==1 {print "# 规则名称:" fname} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            awk 'NR==2 {print "# 规则统计:00000"} {print}' "$file" > tmpfile
            mv tmpfile "$file"
            sed -i '2a\\' "$file"
            line_count=$(tail -n +4 "$file" | wc -l)
            sed -i "2s/[0-9]\+/$line_count/" "$file"
          else
            echo "$file not found."
          fi
        done

    - name: Push Update
      run: |
        cd Scripts-repo
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          git push origin master
        else
          echo "No changes to commit."
        fi

    - name: Cleanup Workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2